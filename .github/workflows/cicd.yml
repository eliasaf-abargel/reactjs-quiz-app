name: React.js CICD

on:
  push:
    branches: "main"
  pull_request:
    branches: "main"

jobs:
  frontend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./quiz-app
    strategy:
      matrix:
        node-version: [20.x]
        architecture: [x64]
    steps:
      - name: 🛠️ Check-out git repository
        uses: actions/checkout@v4

      - name: 🚀 USE NODEJS ${{ matrix.node-version }} - ${{ matrix.architecture }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          architecture: ${{ matrix.architecture }}

      - name: 📦 Install project dependencies
        run: |
          echo "🟢 Installing dependencies..."
          npm i
          npm run lint
          npm install --save-dev --save-exact prettier
          npm run prettier
          npm test
        env:
          CI: true

      - name: 🔨 Build
        run: |
          echo "🟢 Building project..."
          npm run build

      - name: 🔍 Setup SonarQube
        uses: warchant/setup-sonar-scanner@v8

      - name: ✅ Pre-check SonarCloud access
        run: |
          echo "🟢 Checking SonarCloud access..."
          curl -u "${{ secrets.SONAR_TOKEN }}" -X GET "${{ secrets.SONAR_URL }}/api/projects/search?organization=${{ secrets.SONAR_ORGANIZATION }}" || exit 1
          echo "🟢 Access to SonarCloud verified."

      - name: ✅ Analyze with SonarCloud
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: reactjs-quiz-app
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.host.url=${{ secrets.SONAR_URL }}
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
            -Dsonar.sources=src/
            -Dsonar.verbose=true

  backend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    strategy:
      matrix:
        node-version: [20.x]
        architecture: [x64]
    steps:
      - name: 🛠️ Check-out git repository
        uses: actions/checkout@v4

      - name: 🚀 USE NODEJS ${{ matrix.node-version }} - ${{ matrix.architecture }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          architecture: ${{ matrix.architecture }}

      - name: 📦 Install project dependencies
        run: |
          echo "🟢 Installing backend dependencies..."
          npm i
          npm run lint
          npm install --save-dev --save-exact prettier
          npm run prettier
          npm test
        env:
          CI: true

      - name: 🔍 Setup SonarQube
        uses: warchant/setup-sonar-scanner@v8

      - name: ✅ Pre-check SonarCloud access for backend
        run: |
          echo "🟢 Checking SonarCloud access for backend..."
          curl -u "${{ secrets.SONAR_TOKEN }}" -X GET "${{ secrets.SONAR_URL }}/api/projects/search?organization=${{ secrets.SONAR_ORGANIZATION }}" || exit 1
          echo "🟢 Access to SonarCloud for backend verified."

      - name: ✅ Analyze with SonarCloud
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: backend
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.host.url=${{ secrets.SONAR_URL }}
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
            -Dsonar.sources=.
            -Dsonar.verbose=true