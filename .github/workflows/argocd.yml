name: Deploy to ArgoCD

on:
  workflow_run:
    workflows: ["React.js CICD"]
    types:
      - completed
  workflow_dispatch:

jobs:
  argocd-deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    steps:
      - name: 🛠️ Check-out git repository
        uses: actions/checkout@v4

      - name: 🛠️ Install ArgoCD CLI
        run: |
          curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
          rm argocd-linux-amd64

      - name: 🔍 Check ArgoCD Connection
        run: |
          echo "🔍 Checking connection to ArgoCD server: ${{ secrets.ARGOCD_SERVER }}"
          if curl -sSf -k -H "Authorization: Bearer ${{ secrets.ARGOCD_AUTH_TOKEN }}" "${{ secrets.ARGOCD_SERVER }}/api/v1/applications" > /dev/null; then
            echo "✅ Successfully connected to ArgoCD server."
          else
            echo "❌ Failed to connect to ArgoCD server."
            echo "❗ Please check the ARGOCD_SERVER and ARGOCD_AUTH_TOKEN secrets."
            exit 1
          fi

      - name: 🔍 Get current image tags from manifest
        id: get-current-tags
        run: |
          FRONTEND_CURRENT=$(grep -oP 'image: ${{ secrets.DOCKER_USERNAME }}/frontend-js:\K.*' kubernetes-manifest/frontend-deployment.yaml)
          BACKEND_CURRENT=$(grep -oP 'image: ${{ secrets.DOCKER_USERNAME }}/backend-api:\K.*' kubernetes-manifest/backend-deployment.yaml)
          echo "FRONTEND_CURRENT=${FRONTEND_CURRENT}" >> $GITHUB_OUTPUT
          echo "BACKEND_CURRENT=${BACKEND_CURRENT}" >> $GITHUB_OUTPUT

      - name: 🔍 Get latest image tags from DockerHub
        id: get-latest-tags
        run: |
          FRONTEND_LATEST=$(curl -s "https://hub.docker.com/v2/repositories/${{ secrets.DOCKER_USERNAME }}/frontend-js/tags/" | jq -r '.results[0].name')
          BACKEND_LATEST=$(curl -s "https://hub.docker.com/v2/repositories/${{ secrets.DOCKER_USERNAME }}/backend-api/tags/" | jq -r '.results[0].name')
          echo "FRONTEND_LATEST=${FRONTEND_LATEST}" >> $GITHUB_OUTPUT
          echo "BACKEND_LATEST=${BACKEND_LATEST}" >> $GITHUB_OUTPUT

      - name: 🔄 Update Kubernetes manifests if tags differ
        id: update-manifests
        run: |
          UPDATED=false
          if [ "${{ steps.get-current-tags.outputs.FRONTEND_CURRENT }}" != "${{ steps.get-latest-tags.outputs.FRONTEND_LATEST }}" ]; then
            sed -i 's|image: ${{ secrets.DOCKER_USERNAME }}/frontend-js:.*|image: ${{ secrets.DOCKER_USERNAME }}/frontend-js:${{ steps.get-latest-tags.outputs.FRONTEND_LATEST }}|' kubernetes-manifest/frontend-deployment.yaml
            UPDATED=true
          fi
          if [ "${{ steps.get-current-tags.outputs.BACKEND_CURRENT }}" != "${{ steps.get-latest-tags.outputs.BACKEND_LATEST }}" ]; then
            sed -i 's|image: ${{ secrets.DOCKER_USERNAME }}/backend-api:.*|image: ${{ secrets.DOCKER_USERNAME }}/backend-api:${{ steps.get-latest-tags.outputs.BACKEND_LATEST }}|' kubernetes-manifest/backend-deployment.yaml
            UPDATED=true
          fi
          echo "UPDATED=${UPDATED}" >> $GITHUB_OUTPUT

      - name: 💾 Commit and push changes
        if: steps.update-manifests.outputs.UPDATED == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add kubernetes-manifest/*.yaml
          git commit -m "Update image tags to latest versions" || echo "No changes to commit"
          git push

      - name: 🚀 Sync quiz application with ArgoCD
        if: steps.update-manifests.outputs.UPDATED == 'true'
        run: |
          echo "🟢 Synchronizing quiz application with ArgoCD..."
          argocd app sync quiz --server "argocd.binaiq.com" --auth-token "${{ secrets.ARGOCD_AUTH_TOKEN }}" --grpc-web --insecure

      - name: ⏳ Wait for synchronization to complete
        if: steps.update-manifests.outputs.UPDATED == 'true'
        run: |
          echo "⏳ Waiting for ArgoCD synchronization to complete..."
          argocd app wait quiz --server "${{ secrets.ARGOCD_SERVER01 }}" --auth-token "${{ secrets.ARGOCD_AUTH_TOKEN }}" --timeout 300 --insecure

      - name: ✅ Deployment completed
        if: steps.update-manifests.outputs.UPDATED == 'true'
        run: echo "✅ ArgoCD deployment completed successfully!"

      - name: 🔴 No changes detected
        if: steps.update-manifests.outputs.UPDATED != 'true'
        run: echo "🔴 No changes detected in image tags. Skipping ArgoCD sync."