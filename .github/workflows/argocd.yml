name: Deploy to ArgoCD

on:
  workflow_run:
    workflows: ["React.js CICD"]
    types:
      - completed

jobs:
  argocd-deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: 🛠️ Check-out git repository
        uses: actions/checkout@v4

      - name: 🛠️ Install ArgoCD CLI
        run: |
          curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
          rm argocd-linux-amd64

      - name: 🔍 Check ArgoCD Connection
        run: |
          ARGOCD_SERVER="${{ secrets.ARGOCD_SERVER }}"
          echo "Checking connection to ArgoCD server: $ARGOCD_SERVER"
          if curl -sSf "$ARGOCD_SERVER/api/version" > /dev/null; then
            echo "✅ Successfully connected to ArgoCD server"
          else
            echo "❌ Failed to connect to ArgoCD server"
            echo "Please check the ARGOCD_SERVER secret and ensure it's set to https://argocd.binaiq.com"
            exit 1
          fi

      - name: 🔍 Check DockerHub for frontend image changes
        id: check-frontend
        run: |
          LATEST_DIGEST=$(docker pull ${{ secrets.DOCKER_USERNAME }}/frontend-js:latest 2>/dev/null | grep "Digest: sha256:" | cut -d ':' -f 3)
          CURRENT_DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ${{ secrets.DOCKER_USERNAME }}/frontend-js:latest 2>/dev/null | cut -d '@' -f 2 || echo '')
          if [ "$LATEST_DIGEST" != "$CURRENT_DIGEST" ]; then
            echo "frontend_changed=true" >> $GITHUB_OUTPUT
            echo "🟢 Changes detected in DockerHub for frontend."
          else
            echo "frontend_changed=false" >> $GITHUB_OUTPUT
            echo "🔴 No changes detected in DockerHub for frontend."
          fi

      - name: 🔍 Check DockerHub for backend image changes
        id: check-backend
        run: |
          LATEST_DIGEST=$(docker pull ${{ secrets.DOCKER_USERNAME }}/backend-api:latest 2>/dev/null | grep "Digest: sha256:" | cut -d ':' -f 3)
          CURRENT_DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ${{ secrets.DOCKER_USERNAME }}/backend-api:latest 2>/dev/null | cut -d '@' -f 2 || echo '')
          if [ "$LATEST_DIGEST" != "$CURRENT_DIGEST" ]; then
            echo "backend_changed=true" >> $GITHUB_OUTPUT
            echo "🟢 Changes detected in DockerHub for backend."
          else
            echo "backend_changed=false" >> $GITHUB_OUTPUT
            echo "🔴 No changes detected in DockerHub for backend."
          fi

      - name: 🚀 Sync frontend application with ArgoCD
        if: steps.check-frontend.outputs.frontend_changed == 'true'
        run: |
          echo "🟢 Synchronizing frontend application with ArgoCD..."
          argocd app sync frontend --server "${{ secrets.ARGOCD_SERVER }}" --auth-token "${{ secrets.ARGOCD_AUTH_TOKEN }}" --grpc-web


      - name: 🚀 Sync backend application with ArgoCD
        if: steps.check-backend.outputs.backend_changed == 'true'
        run: |
          echo "🟢 Synchronizing backend application with ArgoCD..."
          argocd app sync backend --server "${{ secrets.ARGOCD_SERVER }}" --auth-token "${{ secrets.ARGOCD_AUTH_TOKEN }}" --grpc-web


      - name: 🔍 Wait for synchronization to complete
        if: steps.check-frontend.outputs.frontend_changed == 'true' || steps.check-backend.outputs.backend_changed == 'true'
        run: |
          echo "🟢 Waiting for ArgoCD synchronization to complete..."
          if [ "${{ steps.check-frontend.outputs.frontend_changed }}" == "true" ]; then
            argocd app wait frontend --server "${{ secrets.ARGOCD_SERVER }}" --auth-token "${{ secrets.ARGOCD_AUTH_TOKEN }}" --timeout 300
          fi
          if [ "${{ steps.check-backend.outputs.backend_changed }}" == "true" ]; then
            argocd app wait backend --server "${{ secrets.ARGOCD_SERVER }}" --auth-token "${{ secrets.ARGOCD_AUTH_TOKEN }}" --timeout 300
          fi


      - name: ✅ Deployment completed
        if: steps.check-frontend.outputs.frontend_changed == 'true' || steps.check-backend.outputs.backend_changed == 'true'
        run: echo "✅ ArgoCD deployment completed successfully!"


      - name: 🔴 No changes detected
        if: steps.check-frontend.outputs.frontend_changed != 'true' && steps.check-backend.outputs.backend_changed != 'true'
        run: echo "🔴 No changes detected in either frontend or backend. Skipping ArgoCD sync."